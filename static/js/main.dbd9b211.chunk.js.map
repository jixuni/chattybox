{"version":3,"sources":["serviceWorker.js","login/styles.js","login/login.js","signup/styles.js","signup/signup.js","newchat/styles.js","newchat/NewChat.js","chatlist/styles.js","chatlist/chatList.js","chatview/styles.js","chatview/chatView.js","chattextbox/styles.js","chattextbox/chatTextBox.js","dashboard/styles.js","dashboard/dashboard.js","index.js"],"names":["Boolean","window","location","hostname","match","styles","theme","main","Object","defineProperty","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","concat","form","submit","noAccountHeader","signUpLink","textDecoration","color","fontWeight","errorText","textAlign","firebase","require","LoginComponent","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","userTyping","type","e","setState","email","target","value","password","submitLogin","preventDefault","auth","signInWithEmailAndPassword","state","then","props","history","push","err","loginError","console","log","_this2","classes","react_default","a","createElement","className","CssBaseline","Paper","Typography","component","variant","onSubmit","FormControl","required","fullWidth","margin","InputLabel","htmlFor","Input","autoComplete","autoFocus","id","onChange","Button","react_router_dom","to","React","Component","withStyles","hasAccountHeader","logInLink","SignupCompoent","formIsValid","passwordConfirmation","submitSignup","createUserWithEmailAndPassword","authRes","userObj","user","firestore","collection","doc","set","dbError","authErr","signupError","position","top","left","input","NewChatComponent","inputType","username","message","submitNewChat","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","userExists","sent","chatExists","goToChat","createChat","stop","_x","apply","arguments","buildDocKey","currentUser","sort","join","newChatSubmitFn","sendTo","goToChatFn","_callee2","docKey","chat","_context2","get","exists","abrupt","_callee3","usersSnapshot","_context3","docs","map","_doc","data","includes","serverError","root","backgroundColor","palette","background","height","boxShadow","listItem","cursor","newChatBtn","borderRadius","unreadMessage","right","ChatListComponent","userIsSender","messages","length","sender","userEmail","newChat","newChatBtnFn","selectChat","index","selectChatFn","chats","onClick","List","_chat","_index","key","ListItem","selected","selectedChatIndex","ListItemAvatar","Avatar","alt","users","filter","_user","split","ListItemText","primary","secondary","Fragment","substring","receiverHasRead","ListItemIcon","NotificationImportant_default","Divider","content","overflow","boxSizing","overflowY","userSent","float","clear","wordWrap","friendSent","chatHeader","fontSize","paddingTop","ChatViewComponent","componentDidUpdate","container","document","getElementById","scrollTo","scrollheight","_this$props","undefined","_usr","_msg","sendBtn","&:hover","chatTextBoxContainer","bottom","chatTextBox","ChatTextBoxComponent","keyCode","submitMessage","chatText","messageValid","txt","replace","userClickedInput","messageReadFn","submitMessageFn","TextField","placeholder","onKeyUp","onFocus","Send_default","signOutBtn","DashboardComponent","signOut","msg","selectedChat","update","FieldValue","arrayUnion","timestamp","Date","now","friend","newChatBtnClicked","newChatFormVisible","newChatSubmit","chatObj","_ref2","chatIndex","messageRead","_x2","_ref3","usersInChat","find","every","indexOf","_x3","_x4","clickedMessageWhereNotSender","componentWillMount","onAuthStateChanged","_ref4","_callee5","_context5","where","onSnapshot","_ref5","_callee4","res","_context4","friends","_x6","_x5","chatList","chatView","userClickedInputFn","NewChat","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","routing","react_router","path","SignupComponent","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dbd9b211.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const styles = theme => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\n      .spacing.unit * 3}px`\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3\n  },\n  noAccountHeader: {\n    width: \"100%\"\n  },\n  signUpLink: {\n    width: \"100%\",\n    textDecoration: \"none\",\n    color: \"#303f9f\",\n    fontWeight: \"bolder\"\n  },\n  errorText: {\n    color: \"red\",\n    textAlign: \"center\"\n  }\n});\n\nexport default styles;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport styles from \"./styles\";\r\n\r\nconst firebase = require(\"firebase\");\r\n\r\nclass LoginComponent extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: null,\r\n      password: null,\r\n      loginError: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <main className={classes.main}>\r\n        <CssBaseline />\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Log In!\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={e => this.submitLogin(e)}>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"login-email-input\">\r\n                Enter Your Email\r\n              </InputLabel>\r\n              <Input\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                id=\"login=email-input\"\r\n                onChange={e => this.userTyping(\"email\", e)}\r\n              />\r\n            </FormControl>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"login-password-input\">\r\n                Enter Your Password\r\n              </InputLabel>\r\n              <Input\r\n                type=\"password\"\r\n                id=\"login=password-input\"\r\n                onChange={e => this.userTyping(\"password\", e)}\r\n              />\r\n            </FormControl>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Log In\r\n            </Button>\r\n          </form>\r\n          {this.state.loginError ? (\r\n            <Typography\r\n              component=\"h5\"\r\n              variant=\"h6\"\r\n              className={classes.errorText}\r\n            >\r\n              Incorrect Login Information\r\n            </Typography>\r\n          ) : null}\r\n          <Typography\r\n            component=\"h5\"\r\n            variant=\"h6\"\r\n            className={classes.noAccountHeader}\r\n          >\r\n            Don't Have An Account?\r\n          </Typography>\r\n          <Link className={classes.signUpLink} to=\"/signup\">\r\n            Sign Up!\r\n          </Link>\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n  userTyping = (type, e) => {\r\n    switch (type) {\r\n      case \"email\":\r\n        this.setState({ email: e.target.value });\r\n        break;\r\n\r\n      case \"password\":\r\n        this.setState({ password: e.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  submitLogin = e => {\r\n    e.preventDefault();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(\r\n        () => {\r\n          this.props.history.push(\"/dashboard\");\r\n        },\r\n        err => {\r\n          this.setState({ loginError: \"Server Error\" });\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(LoginComponent);\r\n","const styles = theme => ({\r\n  main: {\r\n    width: \"auto\",\r\n    display: \"block\", // Fix IE 11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\r\n      .spacing.unit * 3}px`\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3\r\n  },\r\n  hasAccountHeader: {\r\n    width: \"100%\"\r\n  },\r\n  logInLink: {\r\n    width: \"100%\",\r\n    textDecoration: \"none\",\r\n    color: \"#303f9f\",\r\n    fontWeight: \"bolder\"\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    textAlign: \"center\"\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport styles from \"./styles\";\r\nconst firebase = require(\"firebase\");\r\n\r\nclass SignupCompoent extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: null,\r\n      password: null,\r\n      passwordConfirmation: null,\r\n      signupError: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <main className={classes.main}>\r\n        <CssBaseline />\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up!\r\n          </Typography>\r\n\r\n          <form onSubmit={e => this.submitSignup(e)} className={classes.form}>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"signup-email-input\">\r\n                Enter Your Email\r\n              </InputLabel>\r\n              <Input\r\n                autoComplete=\"email\"\r\n                onChange={e => this.userTyping(\"email\", e)}\r\n                autoFocus\r\n                id=\"signup-email-input\"\r\n              />\r\n            </FormControl>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"signup-password-input\">\r\n                Create A Password\r\n              </InputLabel>\r\n              <Input\r\n                type=\"password\"\r\n                onChange={e => this.userTyping(\"password\", e)}\r\n                id=\"signup-password-input\"\r\n              />\r\n            </FormControl>\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"signup-password-confirmation-input\">\r\n                Confirm Your Password\r\n              </InputLabel>\r\n              <Input\r\n                type=\"password\"\r\n                onChange={e => this.userTyping(\"passwordConfirmation\", e)}\r\n                id=\"signup-password-confirmation-input\"\r\n              />\r\n            </FormControl>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n          {this.state.signupError ? (\r\n            <Typography\r\n              className={classes.errorText}\r\n              component=\"h5\"\r\n              variant=\"h6\"\r\n            >\r\n              {this.state.signupError}\r\n            </Typography>\r\n          ) : null}\r\n          <Typography\r\n            component=\"h5\"\r\n            variant=\"h6\"\r\n            className={classes.hasAccountHeader}\r\n          >\r\n            Already Have An Account?\r\n          </Typography>\r\n          <Link className={classes.logInLink} to=\"/login\">\r\n            Log In!\r\n          </Link>\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  formIsValid = () => this.state.password === this.state.passwordConfirmation;\r\n\r\n  userTyping = (type, e) => {\r\n    switch (type) {\r\n      case \"email\":\r\n        this.setState({ email: e.target.value });\r\n        break;\r\n\r\n      case \"password\":\r\n        this.setState({ password: e.target.value });\r\n        break;\r\n\r\n      case \"passwordConfirmation\":\r\n        this.setState({ passwordConfirmation: e.target.value });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  submitSignup = e => {\r\n    e.preventDefault();\r\n    if (!this.formIsValid()) {\r\n      this.setState({ signupError: \"Passwords do not match!\" });\r\n      return;\r\n    }\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then(\r\n        authRes => {\r\n          const userObj = {\r\n            email: authRes.user.email\r\n          };\r\n          firebase\r\n            .firestore()\r\n            .collection(\"user\")\r\n            .doc(this.state.email)\r\n            .set(userObj)\r\n            .then(\r\n              () => {\r\n                this.props.history.push(\"/dashboard\");\r\n              },\r\n              dbError => {\r\n                console.log(dbError);\r\n              }\r\n            );\r\n        },\r\n        authErr => {\r\n          console.log(authErr);\r\n          this.setState({ signupError: \"Failed to add user\" });\r\n        }\r\n      );\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(SignupCompoent);\r\n","const styles = theme => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing() * 3,\n    marginRight: theme.spacing() * 3,\n    [theme.breakpoints.up(400 + theme.spacing() * 3 * 2)]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    padding: `${theme.spacing() * 2}px ${theme.spacing() *\n      3}px ${theme.spacing() * 3}px`,\n    position: \"absolute\",\n    width: \"350px\",\n    top: \"50px\",\n    left: \"calc(50% + 150px - 175px)\"\n  },\n  input: {},\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing()\n  },\n  submit: {\n    marginTop: theme.spacing() * 3\n  },\n  errorText: {\n    color: \"red\",\n    textAlign: \"center\"\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  Button,\n  Paper,\n  withStyles,\n  CssBaseline,\n  Typography\n} from \"@material-ui/core\";\nimport styles from \"./styles\";\nconst firebase = require(\"firebase\");\n\nclass NewChatComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      username: null,\n      message: null\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Send A Message!\n          </Typography>\n          <form className={classes.form} onSubmit={e => this.submitNewChat(e)}>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"new-chat-username\">\n                Enter Your Friend's Email\n              </InputLabel>\n              <Input\n                required\n                className={classes.input}\n                autoFocus\n                onChange={e => this.userTyping(\"username\", e)}\n                id=\"new-chat-username\"\n              />\n            </FormControl>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"new-chat-message\">\n                Enter Your Message\n              </InputLabel>\n              <Input\n                required\n                className={classes.input}\n                onChange={e => this.userTyping(\"message\", e)}\n                id=\"new-chat-message\"\n              />\n            </FormControl>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              type=\"submit\"\n            >\n              Send\n            </Button>\n          </form>\n          {this.state.serverError ? (\n            <Typography\n              component=\"h5\"\n              variant=\"h6\"\n              className={classes.errorText}\n            >\n              Unable to locate the user\n            </Typography>\n          ) : null}\n        </Paper>\n      </main>\n    );\n  }\n  componentWillMount() {\n    if (!firebase.auth().currentUser) this.props.history.push(\"/login\");\n  }\n  userTyping = (inputType, e) => {\n    switch (inputType) {\n      case \"username\":\n        this.setState({ username: e.target.value });\n        break;\n\n      case \"message\":\n        this.setState({ message: e.target.value });\n        break;\n      default:\n        break;\n    }\n  };\n  submitNewChat = async e => {\n    e.preventDefault();\n    const userExists = await this.userExists();\n    if (userExists) {\n      const chatExists = await this.chatExists();\n      chatExists ? this.goToChat() : this.createChat();\n    }\n  };\n  buildDocKey = () =>\n    [firebase.auth().currentUser.email, this.state.username].sort().join(\":\");\n  createChat = () => {\n    this.props.newChatSubmitFn({\n      sendTo: this.state.username,\n      message: this.state.message\n    });\n  };\n  goToChat = () =>\n    this.props.goToChatFn(this.buildDocKey(), this.state.message);\n  chatExists = async () => {\n    const docKey = this.buildDocKey();\n    const chat = await firebase\n      .firestore()\n      .collection(\"chats\")\n      .doc(docKey)\n      .get();\n    console.log(chat.exists);\n    return chat.exists;\n  };\n  userExists = async () => {\n    const usersSnapshot = await firebase\n      .firestore()\n      .collection(\"users\")\n      .get();\n    const exists = usersSnapshot.docs\n      .map(_doc => _doc.data().email)\n      .includes(this.state.username);\n    this.setState({ serverError: !exists });\n    return exists;\n  };\n}\nexport default withStyles(styles)(NewChatComponent);\n","const styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    height: \"calc(100% - 35px)\",\n    position: \"absolute\",\n    left: \"0\",\n    width: \"300px\",\n    boxShadow: \"0px 0px 2px black\"\n  },\n  listItem: {\n    cursor: \"pointer\"\n  },\n  newChatBtn: {\n    borderRadius: \"0px\"\n  },\n  unreadMessage: {\n    color: \"red\",\n    position: \"absolute\",\n    top: \"0\",\n    right: \"5px\"\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styles from \"./styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport NotificationImportant from \"@material-ui/icons/NotificationImportant\";\n\nclass ChatListComponent extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    if (this.props.chats.length > 0) {\n      return (\n        <div className={classes.root}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            onClick={this.newChat}\n            className={classes.newChatBtn}\n          >\n            New Message\n          </Button>\n          <List>\n            {this.props.chats.map((_chat, _index) => {\n              return (\n                <div key={_index}>\n                  <ListItem\n                    onClick={() => this.selectChat(_index)}\n                    className={classes.listItem}\n                    selected={this.props.selectedChatIndex === _index}\n                    alignItems=\"flex-start\"\n                  >\n                    <ListItemAvatar>\n                      <Avatar alt=\"Remy Sharp\">\n                        {\n                          _chat.users\n                            .filter(_user => _user !== this.props.userEmail)[0]\n                            .split(\"\")[0]\n                        }\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        _chat.users.filter(\n                          _user => _user !== this.props.userEmail\n                        )[0]\n                      }\n                      secondary={\n                        <React.Fragment>\n                          <Typography component=\"span\" color=\"textPrimary\">\n                            {_chat.messages[\n                              _chat.messages.length - 1\n                            ].message.substring(0, 30) + \" ...\"}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                    {_chat.receiverHasRead === false &&\n                    !this.userIsSender(_chat) ? (\n                      <ListItemIcon>\n                        <NotificationImportant\n                          className={classes.unreadMessage}\n                        />\n                      </ListItemIcon>\n                    ) : null}\n                  </ListItem>\n                  <Divider />\n                </div>\n              );\n            })}\n          </List>\n        </div>\n      );\n    } else {\n      return (\n        <div className={classes.root}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            onClick={this.newChat}\n            className={classes.newChatBtn}\n          >\n            New Message\n          </Button>\n          <List />\n        </div>\n      );\n    }\n  }\n  userIsSender = chat =>\n    chat.messages[chat.messages.length - 1].sender === this.props.userEmail;\n  newChat = () => this.props.newChatBtnFn();\n  selectChat = index => this.props.selectChatFn(index);\n}\n\nexport default withStyles(styles)(ChatListComponent);\n","const styles = theme => ({\r\n  content: {\r\n    height: \"calc(100vh - 100px)\",\r\n    overflow: \"auto\",\r\n    padding: \"25px\",\r\n    marginLeft: \"300px\",\r\n    boxSizing: \"border-box\",\r\n    overflowY: \"scroll\",\r\n    top: \"50px\",\r\n    width: \"calc(100% - 300px)\",\r\n    position: \"absolute\"\r\n  },\r\n\r\n  userSent: {\r\n    float: \"left\",\r\n    clear: \"both\",\r\n    padding: \"20px\",\r\n    boxSizing: \"border-box\",\r\n    wordWrap: \"break-word\",\r\n    marginTop: \"10px\",\r\n    backgroundColor: \"#707BC4\",\r\n    color: \"white\",\r\n    width: \"300px\",\r\n    borderRadius: \"10px\"\r\n  },\r\n\r\n  friendSent: {\r\n    float: \"right\",\r\n    clear: \"both\",\r\n    padding: \"20px\",\r\n    boxSizing: \"border-box\",\r\n    wordWrap: \"break-word\",\r\n    marginTop: \"10px\",\r\n    backgroundColor: \"#707BC4\",\r\n    color: \"white\",\r\n    width: \"300px\",\r\n    borderRadius: \"10px\"\r\n  },\r\n\r\n  chatHeader: {\r\n    width: \"calc(100% - 301px)\",\r\n    height: \"50px\",\r\n    backgroundColor: \"#344195\",\r\n    position: \"fixed\",\r\n    marginLeft: \"301px\",\r\n    fontSize: \"18px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    paddingTop: \"10px\",\r\n    boxSizing: \"border-box\"\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React from \"react\";\r\nimport styles from \"./styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nclass ChatViewComponent extends React.Component {\r\n  componentDidUpdate = () => {\r\n    const container = document.getElementById(\"chatview-container\");\r\n\r\n    if (container) {\r\n      container.scrollTo(0, container.scrollheight);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes, chat, user } = this.props;\r\n\r\n    if (chat === undefined) {\r\n      return <main id=\"chatview-container\" className={classes.content} />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <div className={classes.chatHeader}>\r\n            Your conversation with {chat.users.filter(_usr => _usr !== user)[0]}\r\n          </div>\r\n          <main id=\"chatview-container\" className={classes.content}>\r\n            {chat.messages.map((_msg, _index) => {\r\n              return (\r\n                <div\r\n                  key={_index}\r\n                  className={\r\n                    _msg.sender === user ? classes.userSent : classes.friendSent\r\n                  }\r\n                >\r\n                  {_msg.message}\r\n                </div>\r\n              );\r\n            })}\r\n          </main>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ChatViewComponent);\r\n","const styles = theme => ({\n  sendBtn: {\n    color: \"blue\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      color: \"gray\"\n    }\n  },\n\n  chatTextBoxContainer: {\n    position: \"absolute\",\n    bottom: \"15px\",\n    left: \"315px\",\n    boxSizing: \"border-box\",\n    overflow: \"auto\",\n    width: \"calc(100% - 300px - 50px)\"\n  },\n\n  chatTextBox: {\n    width: \"calc(100% - 25px)\"\n  }\n});\n\nexport default styles;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Send from \"@material-ui/icons/Send\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nclass ChatTextBoxComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chatText: \"\"\n    };\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.chatTextBoxContainer}>\n        <TextField\n          placeholder=\"Type your message...\"\n          onKeyUp={e => this.userTyping(e)}\n          id=\"chattextbox\"\n          className={classes.chatTextBox}\n          onFocus={this.userClickedInput}\n        />\n        <Send onClick={this.submitMessage} className={classes.sendBtn} />\n      </div>\n    );\n  }\n\n  userTyping = e =>\n    e.keyCode === 13\n      ? this.submitMessage()\n      : this.setState({ chatText: e.target.value });\n  //Regex check if its empty input\n  messageValid = txt => txt && txt.replace(/\\s/g, \"\").length;\n\n  userClickedInput = () => {\n    this.props.messageReadFn();\n  };\n  submitMessage = () => {\n    this.props.submitMessageFn(this.state.chatText);\n    if (this.messageValid(this.state.chatText)) {\n      document.getElementById(\"chattextbox\").value = \"\";\n    }\n  };\n}\n\nexport default withStyles(styles)(ChatTextBoxComponent);\n","const styles = theme => ({\r\n  signOutBtn: {\r\n    position: \"absolute\",\r\n    bottom: \"0px\",\r\n    left: \"0px\",\r\n    width: \"300px\",\r\n    borderRadius: \"0px\",\r\n    backgroundColor: \"#227092\",\r\n    height: \"35px\",\r\n    boxShadow: \"0px 0px 2px black\",\r\n    color: \"white\"\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","import React from \"react\";\r\nimport NewChatComponent from \"../newchat/NewChat\";\r\nimport ChatListComponent from \"../chatlist/chatList\";\r\nimport ChatViewComponent from \"../chatview/chatView\";\r\nimport ChatTextBoxComponent from \"../chattextbox/chatTextBox\";\r\nimport styles from \"./styles\";\r\nimport { Button, withStyles } from \"@material-ui/core\";\r\nconst firebase = require(\"firebase\");\r\n\r\nclass DashboardComponent extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      selectedChat: null,\r\n      newChatFormVisible: false,\r\n      email: null,\r\n      friends: [],\r\n      chats: []\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    if (this.state.email) {\r\n      return (\r\n        <div className=\"dashboard-container\" id=\"dashboard-container\">\r\n          <ChatListComponent\r\n            history={this.props.history}\r\n            userEmail={this.state.email}\r\n            selectChatFn={this.selectChat}\r\n            chats={this.state.chats}\r\n            selectedChatIndex={this.state.selectedChat}\r\n            newChatBtnFn={this.newChatBtnClicked}\r\n          />\r\n          {this.state.newChatFormVisible ? null : (\r\n            <ChatViewComponent\r\n              user={this.state.email}\r\n              chat={this.state.chats[this.state.selectedChat]}\r\n            />\r\n          )}\r\n          {this.state.selectedChat !== null &&\r\n          !this.state.newChatFormVisible ? (\r\n            <ChatTextBoxComponent\r\n              userClickedInputFn={this.messageRead}\r\n              submitMessageFn={this.submitMessage}\r\n            />\r\n          ) : null}\r\n          {this.state.newChatFormVisible ? (\r\n            <NewChatComponent\r\n              goToChatFn={this.goToChat}\r\n              newChatSubmitFn={this.newChatSubmit}\r\n            />\r\n          ) : null}\r\n          <Button onClick={this.signOut} className={classes.signOutBtn}>\r\n            Sign Out\r\n          </Button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div>LOADING....</div>;\r\n    }\r\n  }\r\n\r\n  signOut = () => firebase.auth().signOut();\r\n\r\n  submitMessage = msg => {\r\n    const docKey = this.buildDocKey(\r\n      this.state.chats[this.state.selectedChat].users.filter(\r\n        _usr => _usr !== this.state.email\r\n      )[0]\r\n    );\r\n    firebase\r\n      .firestore()\r\n      .collection(\"chats\")\r\n      .doc(docKey)\r\n      .update({\r\n        messages: firebase.firestore.FieldValue.arrayUnion({\r\n          sender: this.state.email,\r\n          message: msg,\r\n          timestamp: Date.now()\r\n        }),\r\n        receiverHasRead: false\r\n      });\r\n  };\r\n\r\n  // Always in alphabetical order:\r\n  // 'user1:user2'\r\n  buildDocKey = friend => [this.state.email, friend].sort().join(\":\");\r\n\r\n  newChatBtnClicked = () =>\r\n    this.setState({ newChatFormVisible: true, selectedChat: null });\r\n\r\n  newChatSubmit = async chatObj => {\r\n    const docKey = this.buildDocKey(chatObj.sendTo);\r\n    await firebase\r\n      .firestore()\r\n      .collection(\"chats\")\r\n      .doc(docKey)\r\n      .set({\r\n        messages: [\r\n          {\r\n            message: chatObj.message,\r\n            sender: this.state.email\r\n          }\r\n        ],\r\n        users: [this.state.email, chatObj.sendTo],\r\n        receiverHasRead: false\r\n      });\r\n    this.setState({ newChatFormVisible: false });\r\n    this.selectChat(this.state.chats.length - 1);\r\n  };\r\n\r\n  selectChat = async chatIndex => {\r\n    await this.setState({ selectedChat: chatIndex, newChatFormVisible: false });\r\n    this.messageRead();\r\n  };\r\n\r\n  goToChat = async (docKey, msg) => {\r\n    const usersInChat = docKey.split(\":\");\r\n    const chat = this.state.chats.find(_chat =>\r\n      usersInChat.every(_user => _chat.users.includes(_user))\r\n    );\r\n    this.setState({ newChatFormVisible: false });\r\n    await this.selectChat(this.state.chats.indexOf(chat));\r\n    this.submitMessage(msg);\r\n  };\r\n\r\n  messageRead = () => {\r\n    const chatIndex = this.state.selectedChat;\r\n    const docKey = this.buildDocKey(\r\n      this.state.chats[chatIndex].users.filter(\r\n        _usr => _usr !== this.state.email\r\n      )[0]\r\n    );\r\n    if (this.clickedMessageWhereNotSender(chatIndex)) {\r\n      firebase\r\n        .firestore()\r\n        .collection(\"chats\")\r\n        .doc(docKey)\r\n        .update({ receiverHasRead: true });\r\n    } else {\r\n      console.log(\"Clicked message where the user was the sender\");\r\n    }\r\n  };\r\n\r\n  clickedMessageWhereNotSender = chatIndex =>\r\n    this.state.chats[chatIndex].messages[\r\n      this.state.chats[chatIndex].messages.length - 1\r\n    ].sender !== this.state.email;\r\n\r\n  componentWillMount = () => {\r\n    firebase.auth().onAuthStateChanged(async _usr => {\r\n      if (!_usr) this.props.history.push(\"/login\");\r\n      else {\r\n        await firebase\r\n          .firestore()\r\n          .collection(\"chats\")\r\n          .where(\"users\", \"array-contains\", _usr.email)\r\n          .onSnapshot(async res => {\r\n            const chats = res.docs.map(_doc => _doc.data());\r\n            await this.setState({\r\n              email: _usr.email,\r\n              chats: chats,\r\n              friends: []\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport default withStyles(styles)(DashboardComponent);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport LoginComponent from \"./login/login\";\nimport SignupComponent from \"./signup/signup\";\nimport DashboardComponent from \"./dashboard/dashboard\";\n\nconst firebase = require(\"firebase\");\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PID,\n  storageBucket: process.env.REACT_APP_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MSGID,\n  appId: process.env.REACT_APP_AID\n});\n\nconst routing = (\n  <Router>\n    <div id=\"routing-container\">\n      <Route path=\"/login\" component={LoginComponent} />\n      <Route path=\"/signup\" component={SignupComponent} />\n      <Route path=\"/dashboard\" component={DashboardComponent} />\n    </div>\n  </Router>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}